From 75e23314b347f9704eaa36b9463a34138e023c57 Mon Sep 17 00:00:00 2001
From: Gerasim Troeglazov <3dEyes@gmail.com>
Date: Tue, 27 Aug 2024 13:25:47 +1000
Subject: Make Elementary the default on Haiku


diff --git a/vcl/source/app/IconThemeSelector.cxx b/vcl/source/app/IconThemeSelector.cxx
index eeea022..48857d0 100644
--- a/vcl/source/app/IconThemeSelector.cxx
+++ b/vcl/source/app/IconThemeSelector.cxx
@@ -67,6 +67,9 @@ IconThemeSelector::GetIconThemeForDesktopEnvironment(const OUString& desktopEnvi
         return "colibre";
     else
         return "colibre_dark";
+#elif defined(__HAIKU__)
+    (void)desktopEnvironment;
+    return "elementary";
 #else
     OUString r;
     if ( desktopEnvironment.equalsIgnoreAsciiCase("plasma5") ||
-- 
2.45.2


From aa39e6bf186ac566f020be71ee6e4d5d794e44ad Mon Sep 17 00:00:00 2001
From: Gerasim Troeglazov <3dEyes@gmail.com>
Date: Tue, 27 Aug 2024 13:26:05 +1000
Subject: Show used vcl backend in About window on Haiku


diff --git a/vcl/source/app/svapp.cxx b/vcl/source/app/svapp.cxx
index af0b1fc..852e4b9 100644
--- a/vcl/source/app/svapp.cxx
+++ b/vcl/source/app/svapp.cxx
@@ -1227,7 +1227,7 @@ OUString Application::GetHWOSConfInfo(const int bSelection, const bool bLocalize
 #endif
             appendDetails(u"", Localize(SV_APP_DEFAULT, bLocalize));
 
-#if (defined LINUX || defined _WIN32 || defined MACOSX || defined __FreeBSD__ || defined EMSCRIPTEN)
+#if (defined LINUX || defined _WIN32 || defined MACOSX || defined __FreeBSD__ || defined EMSCRIPTEN || defined __HAIKU__)
         appendDetails(u"; ", SV_APP_VCLBACKEND + GetToolkitName());
 #endif
     }
-- 
2.45.2


From 4697ffc260969a201b5a5d98cf3e616c8f223699 Mon Sep 17 00:00:00 2001
From: Gerasim Troeglazov <3dEyes@gmail.com>
Date: Tue, 27 Aug 2024 13:26:29 +1000
Subject: Identify Haiku in about window


diff --git a/vcl/unx/generic/app/geninst.cxx b/vcl/unx/generic/app/geninst.cxx
index fe3aefe..c17fa90 100644
--- a/vcl/unx/generic/app/geninst.cxx
+++ b/vcl/unx/generic/app/geninst.cxx
@@ -26,6 +26,11 @@
 #  include <sys/utsname.h>
 #endif
 
+#if defined(__HAIKU__)
+#  include <sys/utsname.h>
+#  include <private/libroot/system_revision.h>
+#endif
+
 #include <config_features.h>
 #if HAVE_FEATURE_OPENGL
 #include <vcl/opengl/OpenGLContext.hxx>
@@ -92,6 +97,16 @@ OUString SalGenericInstance::getOSVersion()
 #define xstr(s) str(s)
     aKernelVer = "Emscripten " xstr(__EMSCRIPTEN_major__)
                  "." xstr(__EMSCRIPTEN_minor__) "." xstr(__EMSCRIPTEN_tiny__);
+#elif defined(__HAIKU__)
+    struct utsname stName;
+    if ( uname( &stName ) != 0 )
+        return aKernelVer;
+
+	const char *haikuRevision = __get_haiku_revision();
+	if (haikuRevision[0] != '\0')
+		return OUString::createFromAscii( stName.sysname ) + " " + OUString::createFromAscii(haikuRevision);
+
+	return OUString::createFromAscii( stName.sysname );
 #endif
     return aKernelVer;
 }
-- 
2.45.2


From f5bb74715dcd1dfcac6d8f13bbfd217eba568a64 Mon Sep 17 00:00:00 2001
From: Gerasim Troeglazov <3dEyes@gmail.com>
Date: Tue, 27 Aug 2024 13:26:59 +1000
Subject: Implement ShellExec on Haiku


diff --git a/shell/source/unix/exec/shellexec.cxx b/shell/source/unix/exec/shellexec.cxx
index 5d421f2..b132fc5 100644
--- a/shell/source/unix/exec/shellexec.cxx
+++ b/shell/source/unix/exec/shellexec.cxx
@@ -187,6 +187,9 @@ void SAL_CALL ShellExec::execute( const OUString& aCommand, const OUString& aPar
             aBuffer.append(" -R");
         }
         aBuffer.append(" --");
+
+#elif __HAIKU__
+		aBuffer.append("open");
 #else
         // Just use xdg-open on non-Mac
         aBuffer.append("xdg-open");
-- 
2.45.2


From 02eb894fdcf7d6b7c6727373727886f615545cb0 Mon Sep 17 00:00:00 2001
From: Gerasim Troeglazov <3dEyes@gmail.com>
Date: Tue, 27 Aug 2024 13:27:34 +1000
Subject: Add XP_HAIKU defs for xmlsec


diff --git a/svl/Library_svl.mk b/svl/Library_svl.mk
index 04abb8c..a265888 100644
--- a/svl/Library_svl.mk
+++ b/svl/Library_svl.mk
@@ -182,6 +182,12 @@ $(eval $(call gb_Library_add_exception_objects,svl,\
     svl/source/uno/pathservice \
 ))
 
+ifeq ($(OS),HAIKU)
+$(eval $(call gb_Library_add_defs,svl,\
+    -DXP_HAIKU=1 \
+))
+endif
+
 ifeq ($(OS),WNT)
 $(eval $(call gb_Library_add_exception_objects,svl,\
     svl/source/svdde/ddecli \
diff --git a/xmlsecurity/Library_xsec_xmlsec.mk b/xmlsecurity/Library_xsec_xmlsec.mk
index 4dc5b9d..0ff7e8e 100644
--- a/xmlsecurity/Library_xsec_xmlsec.mk
+++ b/xmlsecurity/Library_xsec_xmlsec.mk
@@ -130,6 +130,12 @@ endif
 
 else # !$(OS),WNT
 
+ifeq ($(OS),HAIKU)
+$(eval $(call gb_Library_add_defs,xsec_xmlsec,\
+	-DXP_HAIKU=1 \
+))
+endif
+
 ifeq ($(SYSTEM_XMLSEC),)
 $(eval $(call gb_Library_add_libs,xsec_xmlsec,\
        $(gb_UnpackedTarball_workdir)/xmlsec/src/.libs/libxmlsec1.a \
-- 
2.45.2


From 22144758f2bd4e8783fd8feeead1578a155cc4b7 Mon Sep 17 00:00:00 2001
From: Gerasim Troeglazov <3dEyes@gmail.com>
Date: Tue, 27 Aug 2024 13:34:18 +1000
Subject: Don't use fontconfig


diff --git a/vcl/qt5/QtGraphics_Text.cxx b/vcl/qt5/QtGraphics_Text.cxx
index 55613a6..52a20f8 100644
--- a/vcl/qt5/QtGraphics_Text.cxx
+++ b/vcl/qt5/QtGraphics_Text.cxx
@@ -85,7 +85,11 @@ bool QtGraphics::GetFontCapabilities(vcl::FontCapabilities& rFontCapabilities) c
 
 void QtGraphics::GetDevFontList(vcl::font::PhysicalFontCollection* pPFC)
 {
+#ifdef __HAIKU__
+    static const bool bUseFontconfig = false;
+#else
     static const bool bUseFontconfig = (nullptr == getenv("SAL_VCL_QT_NO_FONTCONFIG"));
+#endif
 
     if (pPFC->Count())
         return;
-- 
2.45.2


From b7e12bf45e081431543f2501ef66ab022a8c5e8b Mon Sep 17 00:00:00 2001
From: Gerasim Troeglazov <3dEyes@gmail.com>
Date: Tue, 27 Aug 2024 13:35:14 +1000
Subject: Revert fstack-protector check removal in
 9db11a8ab648f4d04e59e6bb94cd640f64835447


diff --git a/config_host.mk.in b/config_host.mk.in
index a3a9653..8bbbbdf 100644
--- a/config_host.mk.in
+++ b/config_host.mk.in
@@ -317,6 +317,7 @@ export HAVE_DLLEXPORTINLINES=@HAVE_DLLEXPORTINLINES@
 export HAVE_EXTERNAL_DWARF=@HAVE_EXTERNAL_DWARF@
 export HAVE_LO_CLANG_DLLEXPORTINLINES=@HAVE_LO_CLANG_DLLEXPORTINLINES@
 export HAVE_GCC_AVX=@HAVE_GCC_AVX@
+export HAVE_GCC_STACK_PROTECTOR_STRONG=@HAVE_GCC_STACK_PROTECTOR_STRONG@
 export HAVE_GCC_BUILTIN_ATOMIC=@HAVE_GCC_BUILTIN_ATOMIC@
 export HAVE_GCC_FNO_ENFORCE_EH_SPECS=@HAVE_GCC_FNO_ENFORCE_EH_SPECS@
 export HAVE_GCC_FNO_SIZED_DEALLOCATION=@HAVE_GCC_FNO_SIZED_DEALLOCATION@
diff --git a/configure.ac b/configure.ac
index eebd680..a75b63f 100644
--- a/configure.ac
+++ b/configure.ac
@@ -1177,6 +1177,7 @@ haiku*)
     test_gtk3=no
     test_gtk3_kde5=no
     test_kf5=yes
+    test_qt6=yes
     test_kf6=yes
     enable_odk=no
     enable_coinmp=no
@@ -7509,6 +7510,17 @@ if test "$GCC" = "yes" -o "$COM_IS_CLANG" = TRUE; then
         AC_MSG_RESULT([no])
     fi
 
+    AC_MSG_CHECKING([whether $CC_BASE supports -fstack-protector-strong])
+    save_CFLAGS=$CFLAGS
+    CFLAGS="$CFLAGS -O0 -Werror -fstack-protector-strong"
+    AC_LINK_IFELSE([AC_LANG_PROGRAM([[]], [[ char a[8]; a[7] = 0; ]])],[ HAVE_GCC_STACK_PROTECTOR_STRONG=TRUE ],[])
+    CFLAGS=$save_CFLAGS
+    if test "$HAVE_GCC_STACK_PROTECTOR_STRONG" = "TRUE"; then
+        AC_MSG_RESULT([yes])
+    else
+        AC_MSG_RESULT([no])
+    fi
+
     AC_MSG_CHECKING([whether $CC_BASE supports atomic functions])
     AC_LINK_IFELSE([AC_LANG_PROGRAM([[]], [[
     int v = 0;
@@ -7646,6 +7658,7 @@ if test "$GCC" = "yes" -o "$COM_IS_CLANG" = TRUE; then
 fi
 
 AC_SUBST(HAVE_GCC_AVX)
+AC_SUBST(HAVE_GCC_STACK_PROTECTOR_STRONG)
 AC_SUBST(HAVE_GCC_BUILTIN_ATOMIC)
 AC_SUBST(HAVE_GCC_STACK_CLASH_PROTECTION)
 AC_SUBST(HARDENING_CFLAGS)
@@ -13410,7 +13423,7 @@ if test \( "$test_kf6" = "yes" -a "$ENABLE_KF6" = "TRUE" \) -o \
         \( "$test_qt6" = "yes" -a "$ENABLE_QT6" = "TRUE" \)
 then
     qt6_incdirs="$QT6INC /usr/include/qt6 /usr/include $x_includes"
-    qt6_libdirs="$QT6LIB /usr/lib/qt6 /usr/lib $x_libraries"
+    qt6_libdirs="$QT6LIB /system/lib /usr/lib/qt6 /usr/lib $x_libraries"
 
     if test -n "$supports_multilib"; then
         qt6_libdirs="$qt6_libdirs /usr/lib64/qt6 /usr/lib64/qt /usr/lib64"
@@ -13515,12 +13528,12 @@ then
 
     for lib_dir in $qt6_libdirs; do
         if test -z "$qt6_libexec_dirs"; then
-            qt6_libexec_dirs="$lib_dir/libexec"
+            qt6_libexec_dirs="$lib_dir/Qt6"
         else
-            qt6_libexec_dirs="$qt6_libexec_dirs:$lib_dir/libexec"
+            qt6_libexec_dirs="$qt6_libexec_dirs:$lib_dir/Qt6"
         fi
     done
-    AC_PATH_PROGS( MOC6, [moc-qt6 moc], no, [`dirname $qt6_libdir`/libexec:$QT6DIR/libexec:$qt6_libexec_dirs:`echo $qt6_libdirs | $SED -e 's/ /:/g'`:$PATH])
+    AC_PATH_PROGS( MOC6, [moc-qt6 moc], no, [`dirname $qt6_libdir`/Qt6:$QT6DIR/libexec:$qt6_libexec_dirs:`echo $qt6_libdirs | $SED -e 's/ /:/g'`:$PATH])
     if test "$MOC6" = "no"; then
         AC_MSG_ERROR([Qt Meta Object Compiler not found.  Please specify
 the root of your Qt installation by exporting QT6DIR before running "configure".])
diff --git a/solenv/gbuild/platform/com_GCC_defs.mk b/solenv/gbuild/platform/com_GCC_defs.mk
index 29a1942..8988b48 100644
--- a/solenv/gbuild/platform/com_GCC_defs.mk
+++ b/solenv/gbuild/platform/com_GCC_defs.mk
@@ -77,7 +77,7 @@ gb_CFLAGS_COMMON := \
 	-fno-common \
 	-pipe \
 	$(if $(ENABLE_HARDENING_FLAGS),$(HARDENING_CFLAGS)) \
-	$(if $(filter EMSCRIPTEN,$(OS)),-fno-stack-protector,-fstack-protector-strong) \
+	$(if $(or $(filter EMSCRIPTEN,$(OS)),$(filter HAIKU,$(OS))),-fno-stack-protector,-fstack-protector-strong) \
 
 gb_CXXFLAGS_COMMON := \
 	-Wall \
@@ -94,7 +94,7 @@ gb_CXXFLAGS_COMMON := \
 	-fno-common \
 	-pipe \
 	$(if $(ENABLE_HARDENING_FLAGS),$(HARDENING_CFLAGS)) \
-	$(if $(filter EMSCRIPTEN,$(OS)),-fno-stack-protector,-fstack-protector-strong) \
+	$(if $(or $(filter EMSCRIPTEN,$(OS)),$(filter HAIKU,$(OS))),-fno-stack-protector,-fstack-protector-strong) \
 
 ifeq ($(HAVE_WDEPRECATED_COPY_DTOR),TRUE)
 gb_CXXFLAGS_COMMON += -Wdeprecated-copy-dtor
@@ -160,7 +160,7 @@ endif
 gb_VISIBILITY_FLAGS_CXX := -fvisibility-inlines-hidden
 gb_CXXFLAGS_COMMON += $(gb_VISIBILITY_FLAGS_CXX)
 
-gb_LinkTarget_LDFLAGS += $(if $(filter EMSCRIPTEN,$(OS)),-fno-stack-protector,-fstack-protector-strong)
+gb_LinkTarget_LDFLAGS += $(if $(or $(filter EMSCRIPTEN,$(OS)),$(filter HAIKU,$(OS))),-fno-stack-protector,-fstack-protector-strong)
 
 ifneq ($(gb_ENABLE_PCH),)
 ifeq ($(COM_IS_CLANG),TRUE)
-- 
2.45.2


From a2c7144f4f742c6a25ecd3c1c6644ae98bb77fef Mon Sep 17 00:00:00 2001
From: Gerasim Troeglazov <3dEyes@gmail.com>
Date: Tue, 27 Aug 2024 13:35:38 +1000
Subject: Qt::Popup window handling


diff --git a/vcl/qt5/QtFrame.cxx b/vcl/qt5/QtFrame.cxx
index 3949650..4055710 100644
--- a/vcl/qt5/QtFrame.cxx
+++ b/vcl/qt5/QtFrame.cxx
@@ -140,7 +140,7 @@ QtFrame::QtFrame(QtFrame* pParent, SalFrameStyleFlags nStyle, bool bUseCairo)
         else if ((nStyle & SalFrameStyleFlags::FLOAT)
                  && (nStyle & SalFrameStyleFlags::OWNERDRAWDECORATION))
             aWinFlags = Qt::Tool | Qt::FramelessWindowHint;
-        else if (nStyle & SalFrameStyleFlags::TOOLTIP)
+        else if (nStyle & (nStyle & SalFrameStyleFlags::FLOAT | SalFrameStyleFlags::TOOLTIP))
             aWinFlags = Qt::ToolTip;
         // Can't use Qt::Popup, because it grabs the input focus and generates a focus-out event,
         // instantly auto-closing the LO's editable ComboBox popup.
@@ -201,7 +201,7 @@ void QtFrame::FillSystemEnvData(SystemEnvData& rData, sal_IntPtr pWindow, QWidge
         rData.platform = SystemEnvData::Platform::Wayland;
     else if (QGuiApplication::platformName() == "xcb")
         rData.platform = SystemEnvData::Platform::Xcb;
-    else if (QGuiApplication::platformName() == "wasm")
+    else if (QGuiApplication::platformName() == "wasm" || QGuiApplication::platformName() == "haiku")
         rData.platform = SystemEnvData::Platform::WASM;
     else
     {
@@ -310,7 +310,6 @@ QWindow* QtFrame::windowHandle() const
             // no idea, why Qt::WA_NativeWindow breaks the menubar for EMSCRIPTEN
             break;
         case SystemEnvData::Platform::Invalid:
-            std::abort();
             break;
     }
     return pChild->windowHandle();
@@ -731,14 +730,14 @@ void QtFrame::ShowFullScreen(bool bFullScreen, sal_Int32 nScreen)
         m_nRestoreScreen = maGeometry.screen();
         SetScreenNumber(m_bFullScreenSpanAll ? m_nRestoreScreen : nScreen);
         if (!m_bFullScreenSpanAll)
-            windowHandle()->showFullScreen();
+            m_pTopLevel->showFullScreen();
         else
-            windowHandle()->showNormal();
+            m_pTopLevel->showNormal();
     }
     else
     {
         SetScreenNumber(m_nRestoreScreen);
-        windowHandle()->showNormal();
+        m_pTopLevel->showNormal();
         m_pTopLevel->setGeometry(m_aRestoreGeometry);
     }
 }
diff --git a/vcl/qt5/QtWidget.cxx b/vcl/qt5/QtWidget.cxx
index 5f2a001..ad6c093 100644
--- a/vcl/qt5/QtWidget.cxx
+++ b/vcl/qt5/QtWidget.cxx
@@ -184,9 +184,11 @@ void QtWidget::handleMouseButtonEvent(const QtFrame& rFrame, const QMouseEvent*
 void QtWidget::mousePressEvent(QMouseEvent* pEvent)
 {
     handleMouseButtonEvent(m_rFrame, pEvent);
+#ifndef __HAIKU__
     if (m_rFrame.isPopup()
         && !geometry().translated(geometry().topLeft() * -1).contains(pEvent->pos()))
         closePopup();
+#endif
 }
 
 void QtWidget::mouseReleaseEvent(QMouseEvent* pEvent) { handleMouseButtonEvent(m_rFrame, pEvent); }
-- 
2.45.2


From 10a1c329aafc5d3eada890e6e8b253f99292ab10 Mon Sep 17 00:00:00 2001
From: Gerasim Troeglazov <3dEyes@gmail.com>
Date: Tue, 27 Aug 2024 13:36:26 +1000
Subject: Use Noto Sans as default font


diff --git a/unotools/source/config/fontcfg.cxx b/unotools/source/config/fontcfg.cxx
index aafa524..492fbc5 100644
--- a/unotools/source/config/fontcfg.cxx
+++ b/unotools/source/config/fontcfg.cxx
@@ -229,6 +229,11 @@ OUString DefaultFontConfiguration::getUserInterfaceFont( const LanguageTag& rLan
     if( !aUIFont.isEmpty() )
         return aUIFont;
 
+#ifdef __HAIKU__
+	static constexpr OUStringLiteral HAIKU_UI_SANS = u"Noto Sans";
+	return HAIKU_UI_SANS;
+#endif
+
     // fallback mechanism (either no configuration or no entry in configuration
 
     static constexpr OUStringLiteral FALLBACKFONT_UI_SANS = u"Andale Sans UI;Albany;Albany AMT;Tahoma;Arial Unicode MS;Arial;Nimbus Sans L;Bitstream Vera Sans;gnu-unifont;Interface User;Geneva;WarpSans;Dialog;Swiss;Lucida;Helvetica;Charcoal;Chicago;MS Sans Serif;Helv;Times;Times New Roman;Interface System";
-- 
2.45.2


From 65fd0a008dc1ea08f5b6028916b5687fe116973f Mon Sep 17 00:00:00 2001
From: Gerasim Troeglazov <3dEyes@gmail.com>
Date: Tue, 27 Aug 2024 13:37:05 +1000
Subject: Use system font


diff --git a/vcl/source/app/settings.cxx b/vcl/source/app/settings.cxx
index 3a9df91..1ad50bc 100644
--- a/vcl/source/app/settings.cxx
+++ b/vcl/source/app/settings.cxx
@@ -25,6 +25,12 @@
 #include <win/svsys.h>
 #endif
 
+#ifdef __HAIKU__
+#include <kernel/image.h>
+#include <Application.h>
+#include <Font.h>
+#endif
+
 #include <comphelper/processfactory.hxx>
 #include <rtl/bootstrap.hxx>
 
@@ -645,10 +651,22 @@ void ImplStyleData::SetStandardStyles()
     vcl::Font aStdFont( FAMILY_SWISS, Size( 0, 8 ) );
     aStdFont.SetCharSet( osl_getThreadTextEncoding() );
     aStdFont.SetWeight( WEIGHT_NORMAL );
+#ifdef __HAIKU__
+	if (be_app) {
+	    font_family plainFontFamily;
+	    font_style plainFontStyle;
+		be_plain_font->GetFamilyAndStyle(&plainFontFamily, &plainFontStyle);
+		aStdFont.SetFamilyName(OStringToOUString(std::string_view(plainFontFamily), osl_getThreadTextEncoding()));
+		aStdFont.SetStyleName(OStringToOUString(std::string_view(plainFontStyle), osl_getThreadTextEncoding()));
+	} else {
+		aStdFont.SetFamilyName("Noto Sans Display");
+	}
+#else
     if (!comphelper::IsFuzzing())
         aStdFont.SetFamilyName(utl::DefaultFontConfiguration::get().getUserInterfaceFont(LanguageTag(u"en"_ustr)));
     else
         aStdFont.SetFamilyName(u"Liberation Sans"_ustr);
+#endif
     maAppFont                   = aStdFont;
     maHelpFont                  = aStdFont;
     maMenuFont                  = aStdFont;
-- 
2.45.2


From b5ca53b58e035cfea0cb0fb46578e827dadfd3c1 Mon Sep 17 00:00:00 2001
From: Gerasim Troeglazov <3dEyes@gmail.com>
Date: Tue, 27 Aug 2024 20:57:22 +1000
Subject: Don't use Cairo by default


diff --git a/vcl/qt5/QtInstance.cxx b/vcl/qt5/QtInstance.cxx
index 6872fb0..a4d5143 100644
--- a/vcl/qt5/QtInstance.cxx
+++ b/vcl/qt5/QtInstance.cxx
@@ -252,7 +252,11 @@ OUString QtInstance::constructToolkitID(std::u16string_view sTKname)
 
 QtInstance::QtInstance(std::unique_ptr<QApplication>& pQApp)
     : SalGenericInstance(std::make_unique<QtYieldMutex>())
+#ifdef __HAIKU__
+    , m_bUseCairo(nullptr != getenv("SAL_VCL_QT_USE_CAIRO"))
+#else
     , m_bUseCairo(nullptr == getenv("SAL_VCL_QT_USE_QFONT"))
+#endif
     , m_pTimer(nullptr)
     , m_bSleeping(false)
     , m_pQApplication(std::move(pQApp))
-- 
2.45.2


From 1f765f20991f98d2098336c01372070b12b5c15a Mon Sep 17 00:00:00 2001
From: Gerasim Troeglazov <3dEyes@gmail.com>
Date: Tue, 27 Aug 2024 20:57:53 +1000
Subject: Add alias for SIGIOT signal


diff --git a/sal/osl/unx/signal.cxx b/sal/osl/unx/signal.cxx
index 463d051..86fd640 100644
--- a/sal/osl/unx/signal.cxx
+++ b/sal/osl/unx/signal.cxx
@@ -48,6 +48,10 @@
 #include <signal.h>
 #include <unistd.h>
 
+#ifdef __HAIKU__
+#define SIGIOT SIGABRT
+#endif
+
 namespace
 {
 extern "C" using Handler1_t = void (*)(int);
-- 
2.45.2

