From 08ee2efc5ae576a53e040d7e3ab779e59c840bcf Mon Sep 17 00:00:00 2001
From: Sergei Reznikov <diver@gelios.net>
Date: Sat, 9 Sep 2017 02:14:52 +0300
Subject: Haiku fixes


diff --git a/Telegram/SourceFiles/autoupdater.cpp b/Telegram/SourceFiles/autoupdater.cpp
index a6aa4c2..45ba0ed 100644
--- a/Telegram/SourceFiles/autoupdater.cpp
+++ b/Telegram/SourceFiles/autoupdater.cpp
@@ -534,7 +534,7 @@ bool checkReadyUpdate() {
 #elif defined Q_OS_MAC // Q_OS_WIN
 	QString curUpdater = (cExeDir() + cExeName() + qsl("/Contents/Frameworks/Updater"));
 	QFileInfo updater(cWorkingDir() + qsl("tupdates/temp/Telegram.app/Contents/Frameworks/Updater"));
-#elif defined Q_OS_LINUX // Q_OS_MAC
+#elif defined Q_OS_LINUX || defined Q_OS_HAIKU // Q_OS_MAC
 	QString curUpdater = (cExeDir() + qsl("Updater"));
 	QFileInfo updater(cWorkingDir() + qsl("tupdates/temp/Updater"));
 #endif // Q_OS_LINUX
diff --git a/Telegram/SourceFiles/base/build_config.h b/Telegram/SourceFiles/base/build_config.h
index 1731630..3a93c27 100644
--- a/Telegram/SourceFiles/base/build_config.h
+++ b/Telegram/SourceFiles/base/build_config.h
@@ -30,13 +30,15 @@ Copyright (c) 2014-2017 John Preston, https://desktop.telegram.org
 #define OS_LINUX 1
 #elif defined(_WIN32) // __APPLE__ || __linux__
 #define OS_WIN 1
+#elif defined(__HAIKU__) // __APPLE__ || __linux__
+#define OS_HAIKU 1
 #else // __APPLE__ || __linux__ || _WIN32
 #error Please add support for your platform in base/build_config.h
 #endif // else for __APPLE__ || __linux__ || _WIN32
 
 // For access to standard POSIXish features, use OS_POSIX instead of a
 // more specific macro.
-#if defined(OS_MAC) || defined(OS_LINUX)
+#if defined(OS_MAC) || defined(OS_LINUX) || defined(OS_HAIKU)
 #define OS_POSIX 1
 #endif // OS_MAC || OS_LINUX
 
diff --git a/Telegram/SourceFiles/base/flags_tests.cpp b/Telegram/SourceFiles/base/flags_tests.cpp
index f2da24d..d19add1 100644
--- a/Telegram/SourceFiles/base/flags_tests.cpp
+++ b/Telegram/SourceFiles/base/flags_tests.cpp
@@ -18,7 +18,7 @@ to link the code of portions of this program with the OpenSSL library.
 Full license: https://github.com/telegramdesktop/tdesktop/blob/master/LICENSE
 Copyright (c) 2014-2017 John Preston, https://desktop.telegram.org
 */
-#include "catch.hpp"
+#include "../ThirdParty/variant/test/include/catch.hpp"
 
 #include "base/flags.h"
 
diff --git a/Telegram/SourceFiles/base/flat_map_tests.cpp b/Telegram/SourceFiles/base/flat_map_tests.cpp
index 88a83a2..6551667 100644
--- a/Telegram/SourceFiles/base/flat_map_tests.cpp
+++ b/Telegram/SourceFiles/base/flat_map_tests.cpp
@@ -18,7 +18,7 @@ to link the code of portions of this program with the OpenSSL library.
 Full license: https://github.com/telegramdesktop/tdesktop/blob/master/LICENSE
 Copyright (c) 2014-2017 John Preston, https://desktop.telegram.org
 */
-#include "catch.hpp"
+#include "../ThirdParty/variant/test/include/catch.hpp"
 
 #include "base/flat_map.h"
 #include <string>
diff --git a/Telegram/SourceFiles/base/flat_set_tests.cpp b/Telegram/SourceFiles/base/flat_set_tests.cpp
index 675b0bd..735ab1b 100644
--- a/Telegram/SourceFiles/base/flat_set_tests.cpp
+++ b/Telegram/SourceFiles/base/flat_set_tests.cpp
@@ -18,7 +18,7 @@ to link the code of portions of this program with the OpenSSL library.
 Full license: https://github.com/telegramdesktop/tdesktop/blob/master/LICENSE
 Copyright (c) 2014-2017 John Preston, https://desktop.telegram.org
 */
-#include "catch.hpp"
+#include "../../ThirdParty/variant/test/include/catch.hpp"
 
 #include "base/flat_set.h"
 
diff --git a/Telegram/SourceFiles/base/tests_main.cpp b/Telegram/SourceFiles/base/tests_main.cpp
index 0696e47..02bf016 100644
--- a/Telegram/SourceFiles/base/tests_main.cpp
+++ b/Telegram/SourceFiles/base/tests_main.cpp
@@ -19,8 +19,8 @@ Full license: https://github.com/telegramdesktop/tdesktop/blob/master/LICENSE
 Copyright (c) 2014-2017 John Preston, https://desktop.telegram.org
 */
 #define CATCH_CONFIG_RUNNER
-#include "catch.hpp"
-#include "reporters/catch_reporter_compact.hpp"
+#include "../ThirdParty/variant/test/include/catch.hpp"
+//#include "reporters/catch_reporter_compact.hpp"
 #include <QFile>
 
 namespace Catch {
diff --git a/Telegram/SourceFiles/config.h b/Telegram/SourceFiles/config.h
index 633c4e4..0d09e7d 100644
--- a/Telegram/SourceFiles/config.h
+++ b/Telegram/SourceFiles/config.h
@@ -272,6 +272,8 @@ inline const char *cApiDeviceModel() {
 	return "Mac";
 #elif defined Q_OS_LINUX
 	return "PC";
+#elif defined Q_OS_HAIKU
+	return "PC";
 #endif
 }
 inline const char *cApiSystemVersion() {
@@ -281,6 +283,8 @@ inline const char *cApiSystemVersion() {
 	return "OS X";
 #elif defined Q_OS_LINUX
 	return "Linux";
+#elif defined Q_OS_Haiku
+	return "Haiku";
 #endif
 }
 
diff --git a/Telegram/SourceFiles/main.cpp b/Telegram/SourceFiles/main.cpp
index 6e85f27..4684e2a 100644
--- a/Telegram/SourceFiles/main.cpp
+++ b/Telegram/SourceFiles/main.cpp
@@ -23,9 +23,10 @@ Copyright (c) 2014-2017 John Preston, https://desktop.telegram.org
 #include "storage/localstorage.h"
 
 int main(int argc, char *argv[]) {
-#ifndef Q_OS_MAC // Retina display support is working fine, others are not.
+#if !defined(Q_OS_MAC) && QT_VERSION >= QT_VERSION_CHECK(5, 6, 0)
+	// Retina display support is working fine, others are not.
 	QCoreApplication::setAttribute(Qt::AA_DisableHighDpiScaling, true);
-#endif // Q_OS_MAC
+#endif // not defined Q_OS_MAC and QT_VERSION >= 5.6.0
 	QCoreApplication::setApplicationName(qsl("TelegramDesktop"));
 
 	InitFromCommandLine(argc, argv);
@@ -39,6 +40,11 @@ int main(int argc, char *argv[]) {
 	Logs::start(); // must be started before Platform is started
 	Platform::start(); // must be started before QApplication is created
 
+	// I don't know why path is not in QT_PLUGIN_PATH by default
+	QCoreApplication::addLibraryPath("/boot/system/add-ons/Qt");
+	// without this Telegram doesn't start on Ubuntu 17.04 due GTK errors
+	setenv("QT_STYLE_OVERRIDE", "qwerty", false);
+
 	int result = 0;
 	{
 		Application app(argc, argv);
diff --git a/Telegram/SourceFiles/platform/linux/linux_libs.h b/Telegram/SourceFiles/platform/linux/linux_libs.h
index a8bf969..7559354 100644
--- a/Telegram/SourceFiles/platform/linux/linux_libs.h
+++ b/Telegram/SourceFiles/platform/linux/linux_libs.h
@@ -29,7 +29,7 @@ extern "C" {
 } // extern "C"
 
 #ifndef TDESKTOP_DISABLE_UNITY_INTEGRATION
-#include <unity/unity/unity.h>
+typedef void UnityLauncherEntry;
 #endif // !TDESKTOP_DISABLE_UNITY_INTEGRATION
 
 namespace Platform {
diff --git a/Telegram/SourceFiles/platform/platform_file_utilities.h b/Telegram/SourceFiles/platform/platform_file_utilities.h
index 593ab28..c08f759 100644
--- a/Telegram/SourceFiles/platform/platform_file_utilities.h
+++ b/Telegram/SourceFiles/platform/platform_file_utilities.h
@@ -51,8 +51,8 @@ bool Get(QStringList &files, QByteArray &remoteContent, const QString &caption,
 
 #ifdef Q_OS_MAC
 #include "platform/mac/file_utilities_mac.h"
-#elif defined Q_OS_LINUX // Q_OS_MAC
-#include "platform/linux/file_utilities_linux.h"
+//#elif defined Q_OS_LINUX // Q_OS_MAC
+//#include "platform/linux/file_utilities_linux.h"
 #elif defined Q_OS_WINRT || defined Q_OS_WIN // Q_OS_MAC || Q_OS_LINUX
 #include "platform/win/file_utilities_win.h"
 #endif // Q_OS_MAC || Q_OS_LINUX || Q_OS_WINRT || Q_OS_WIN
diff --git a/Telegram/SourceFiles/platform/platform_main_window.h b/Telegram/SourceFiles/platform/platform_main_window.h
index b7b5334..66af0cd 100644
--- a/Telegram/SourceFiles/platform/platform_main_window.h
+++ b/Telegram/SourceFiles/platform/platform_main_window.h
@@ -34,6 +34,8 @@ class MainWindow;
 #include "platform/mac/main_window_mac.h"
 #elif defined Q_OS_LINUX // Q_OS_MAC
 #include "platform/linux/main_window_linux.h"
-#elif defined Q_OS_WIN // Q_OS_MAC || Q_OS_LINUX
+#elif defined Q_OS_HAIKU // Q_OS_MAC || Q_OS_LINUX
+#include "platform/haiku/main_window_haiku.h"
+#elif defined Q_OS_WIN // Q_OS_MAC || Q_OS_LINUX || Q_OS_HAIKU
 #include "platform/win/main_window_win.h"
 #endif // Q_OS_MAC || Q_OS_LINUX || Q_OS_WIN
diff --git a/Telegram/SourceFiles/platform/platform_specific.h b/Telegram/SourceFiles/platform/platform_specific.h
index 359b047..dca0c7e 100644
--- a/Telegram/SourceFiles/platform/platform_specific.h
+++ b/Telegram/SourceFiles/platform/platform_specific.h
@@ -47,6 +47,8 @@ void finish();
 #include "platform/mac/specific_mac.h"
 #elif defined Q_OS_LINUX // Q_OS_MAC
 #include "platform/linux/specific_linux.h"
-#elif defined Q_OS_WIN // Q_OS_MAC || Q_OS_LINUX
+#elif defined Q_OS_HAIKU // Q_OS_MAC || Q_OS_LINUX
+#include "platform/haiku/specific_haiku.h"
+#elif defined Q_OS_WIN // Q_OS_MAC || Q_OS_LINUX || Q_OS_HAIKU
 #include "platform/win/specific_win.h"
 #endif // Q_OS_MAC || Q_OS_LINUX || Q_OS_WIN
diff --git a/Telegram/SourceFiles/platform/platform_window_title.h b/Telegram/SourceFiles/platform/platform_window_title.h
index 1d0d892..285568c 100644
--- a/Telegram/SourceFiles/platform/platform_window_title.h
+++ b/Telegram/SourceFiles/platform/platform_window_title.h
@@ -38,7 +38,7 @@ void PreviewWindowFramePaint(QImage &preview, const style::palette &palette, QRe
 #include "platform/mac/window_title_mac.h"
 #elif defined Q_OS_WIN // Q_OS_MAC
 #include "platform/win/window_title_win.h"
-#elif defined Q_OS_WINRT || defined Q_OS_LINUX // Q_OS_MAC || Q_OS_WIN
+#elif defined Q_OS_WINRT || defined Q_OS_LINUX || defined Q_OS_HAIKU // Q_OS_MAC || Q_OS_WIN
 
 namespace Platform {
 
diff --git a/Telegram/SourceFiles/qt_functions.cpp b/Telegram/SourceFiles/qt_functions.cpp
new file mode 100644
index 0000000..4a722b8
--- /dev/null
+++ b/Telegram/SourceFiles/qt_functions.cpp
@@ -0,0 +1,94 @@
+/****************************************************************************
+**
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
+**
+** This file contains some parts of the Qt Toolkit.
+**
+** $QT_BEGIN_LICENSE:LGPL21$
+** Commercial License Usage
+** Licensees holding valid commercial Qt licenses may use this file in
+** accordance with the commercial license agreement provided with the
+** Software or, alternatively, in accordance with the terms contained in
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
+**
+** GNU Lesser General Public License Usage
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 or version 3 as published by the Free
+** Software Foundation and appearing in the file LICENSE.LGPLv21 and
+** LICENSE.LGPLv3 included in the packaging of this file. Please review the
+** following information to ensure the GNU Lesser General Public License
+** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+**
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
+**
+** $QT_END_LICENSE$
+**
+****************************************************************************/
+
+/* TODO: find a dynamic library with these symbols. */
+
+/* Debian maintainer: this function is taken from qfiledialog.cpp */
+/*
+    Makes a list of filters from ;;-separated text.
+    Used by the mac and windows implementations
+*/
+QStringList qt_make_filter_list(const QString &filter)
+{
+    QString f(filter);
+
+    if (f.isEmpty())
+        return QStringList();
+
+    QString sep(QLatin1String(";;"));
+    int i = f.indexOf(sep, 0);
+    if (i == -1) {
+        if (f.indexOf(QLatin1Char('\n'), 0) != -1) {
+            sep = QLatin1Char('\n');
+            i = f.indexOf(sep, 0);
+        }
+    }
+
+    return f.split(sep);
+}
+
+/* Debian maintainer: this constructor is taken from qtextengine.cpp for TextPainter::drawLine */
+QTextItemInt::QTextItemInt(const QGlyphLayout &g, QFont *font, const QChar *chars_, int numChars, QFontEngine *fe, const QTextCharFormat &format)
+    : flags(0), justified(false), underlineStyle(QTextCharFormat::NoUnderline), charFormat(format),
+      num_chars(numChars), chars(chars_), logClusters(0), f(font),  glyphs(g), fontEngine(fe)
+{
+}
+
+/* Debian maintainer: this method is also taken from qtextengine.cpp */
+// Fix up flags and underlineStyle with given info
+void QTextItemInt::initWithScriptItem(const QScriptItem &si)
+{
+    // explicitly initialize flags so that initFontAttributes can be called
+    // multiple times on the same TextItem
+    flags = 0;
+    if (si.analysis.bidiLevel %2)
+        flags |= QTextItem::RightToLeft;
+    ascent = si.ascent;
+    descent = si.descent;
+
+    if (charFormat.hasProperty(QTextFormat::TextUnderlineStyle)) {
+        underlineStyle = charFormat.underlineStyle();
+    } else if (charFormat.boolProperty(QTextFormat::FontUnderline)
+               || f->d->underline) {
+        underlineStyle = QTextCharFormat::SingleUnderline;
+    }
+
+    // compat
+    if (underlineStyle == QTextCharFormat::SingleUnderline)
+        flags |= QTextItem::Underline;
+
+    if (f->d->overline || charFormat.fontOverline())
+        flags |= QTextItem::Overline;
+    if (f->d->strikeOut || charFormat.fontStrikeOut())
+        flags |= QTextItem::StrikeOut;
+}
diff --git a/Telegram/SourceFiles/qt_static_plugins.cpp b/Telegram/SourceFiles/qt_static_plugins.cpp
index b975c7a..f2f876b 100644
--- a/Telegram/SourceFiles/qt_static_plugins.cpp
+++ b/Telegram/SourceFiles/qt_static_plugins.cpp
@@ -28,13 +28,4 @@ Q_IMPORT_PLUGIN(QWebpPlugin)
 Q_IMPORT_PLUGIN(QCocoaIntegrationPlugin)
 Q_IMPORT_PLUGIN(QGenericEnginePlugin)
 #elif defined Q_OS_LINUX // Q_OS_WIN | Q_OS_MAC
-Q_IMPORT_PLUGIN(QWebpPlugin)
-Q_IMPORT_PLUGIN(QXcbIntegrationPlugin)
-Q_IMPORT_PLUGIN(QConnmanEnginePlugin)
-Q_IMPORT_PLUGIN(QGenericEnginePlugin)
-Q_IMPORT_PLUGIN(QNetworkManagerEnginePlugin)
-Q_IMPORT_PLUGIN(QComposePlatformInputContextPlugin)
-Q_IMPORT_PLUGIN(QIbusPlatformInputContextPlugin)
-Q_IMPORT_PLUGIN(QFcitxPlatformInputContextPlugin)
-Q_IMPORT_PLUGIN(QHimePlatformInputContextPlugin)
 #endif // Q_OS_WIN | Q_OS_MAC | Q_OS_LINUX
diff --git a/Telegram/SourceFiles/ui/text/text.cpp b/Telegram/SourceFiles/ui/text/text.cpp
index d18a8ea..2c58287 100644
--- a/Telegram/SourceFiles/ui/text/text.cpp
+++ b/Telegram/SourceFiles/ui/text/text.cpp
@@ -1689,11 +1689,11 @@ private:
 		if (item == -1)
 			return;
 
-#ifdef OS_MAC_OLD
+#if defined(OS_MAC_OLD) || QT_VERSION < QT_VERSION_CHECK(5, 6, 0)
 		auto end = _e->findItem(line.from + line.length - 1);
-#else // OS_MAC_OLD
+#else
 		auto end = _e->findItem(line.from + line.length - 1, item);
-#endif // OS_MAC_OLD
+#endif
 
 		auto blockIndex = _lineStartBlock;
 		auto currentBlock = _t->_blocks[blockIndex].get();
diff --git a/Telegram/SourceFiles/ui/text/text_block.cpp b/Telegram/SourceFiles/ui/text/text_block.cpp
index f89644e..35230cf 100644
--- a/Telegram/SourceFiles/ui/text/text_block.cpp
+++ b/Telegram/SourceFiles/ui/text/text_block.cpp
@@ -330,7 +330,7 @@ TextBlock::TextBlock(const style::font &font, const QString &str, QFixed minResi
 		SignalHandlers::setCrashAnnotationRef("CrashString", &part);
 
 		QStackTextEngine engine(part, blockFont->f);
-		QTextLayout layout(&engine);
+		QTextLayout layout(part, blockFont->f);
 		layout.beginLayout();
 		layout.createLine();
 
diff --git a/Telegram/SourceFiles/ui/twidget.cpp b/Telegram/SourceFiles/ui/twidget.cpp
index e9848ef..dcee47e 100644
--- a/Telegram/SourceFiles/ui/twidget.cpp
+++ b/Telegram/SourceFiles/ui/twidget.cpp
@@ -191,9 +191,9 @@ void sendSynteticMouseEvent(QWidget *widget, QEvent::Type type, Qt::MouseButton
 			, button
 			, QGuiApplication::mouseButtons() | button
 			, QGuiApplication::keyboardModifiers()
-#ifndef OS_MAC_OLD
+#if !defined(OS_MAC_OLD) && QT_VERSION >= QT_VERSION_CHECK(5, 6, 0)
 			, Qt::MouseEventSynthesizedByApplication
-#endif // OS_MAC_OLD
+#endif
 		);
 		ev.setTimestamp(getms());
 		QGuiApplication::sendEvent(windowHandle, &ev);
diff --git a/Telegram/ThirdParty/minizip/ioapi.c b/Telegram/ThirdParty/minizip/ioapi.c
index 7f5c191..649255c 100644
--- a/Telegram/ThirdParty/minizip/ioapi.c
+++ b/Telegram/ThirdParty/minizip/ioapi.c
@@ -14,7 +14,7 @@
         #define _CRT_SECURE_NO_WARNINGS
 #endif
 
-#if defined(__APPLE__) || defined(IOAPI_NO_64)
+#if defined(__APPLE__) || defined(IOAPI_NO_64) || defined(__HAIKU__)
 // In darwin and perhaps other BSD variants off_t is a 64 bit value, hence no need for specific 64 bit functions
 #define FOPEN_FUNC(filename, mode) fopen(filename, mode)
 #define FTELLO_FUNC(stream) ftello(stream)
diff --git a/Telegram/gyp/PrecompiledHeader.cmake b/Telegram/gyp/PrecompiledHeader.cmake
index 5d6830e..c3f08d3 100644
--- a/Telegram/gyp/PrecompiledHeader.cmake
+++ b/Telegram/gyp/PrecompiledHeader.cmake
@@ -112,7 +112,7 @@ function(add_precompiled_header _target _input)
       set(_compiler_FLAGS "@${_pch_c_flags_file}")
       add_custom_command(
         OUTPUT "${_output_c}"
-        COMMAND "${CMAKE_C_COMPILER}" ${_compiler_FLAGS} -x c-header -o "${_output_c}" -c "${_pchfile}"
+        COMMAND "${CMAKE_C_COMPILER}" "$(C_DEFINES)" "$(C_INCLUDES)" "$(C_FLAGS)" -x c-header -o "${_output_c}" -c "${_pchfile}"
         DEPENDS "${_pchfile}" "${_pch_c_flags_file}"
         IMPLICIT_DEPENDS C "${_pch_header}"
         COMMENT "Precompiling ${_name} for ${_target} (C)")
@@ -123,7 +123,7 @@ function(add_precompiled_header _target _input)
       set(_compiler_FLAGS "@${_pch_cpp_flags_file}")
       add_custom_command(
         OUTPUT "${_output_cxx}"
-        COMMAND "${CMAKE_CXX_COMPILER}" ${_compiler_FLAGS} -x c++-header -o "${_output_cxx}" -c "${_pchfile}"
+        COMMAND "${CMAKE_CXX_COMPILER}" "$(CXX_DEFINES)" "$(CXX_INCLUDES)" "$(CXX_FLAGS)" -x c++-header -o "${_output_cxx}" -c "${_pchfile}"
         DEPENDS "${_pchfile}" "${_pch_cpp_flags_file}"
         IMPLICIT_DEPENDS CXX "${_pch_header}"
         COMMENT "Precompiling ${_name} for ${_target} (C++)")
diff --git a/Telegram/gyp/Telegram.gyp b/Telegram/gyp/Telegram.gyp
index 0d1f38a..e716483 100644
--- a/Telegram/gyp/Telegram.gyp
+++ b/Telegram/gyp/Telegram.gyp
@@ -69,6 +69,7 @@
       'telegram_win.gypi',
       'telegram_mac.gypi',
       'telegram_linux.gypi',
+      'telegram_haiku.gypi',
       'qt.gypi',
       'qt_rcc.gypi',
       'codegen_rules.gypi',
@@ -80,12 +81,10 @@
       'codegen.gyp:codegen_numbers',
       'codegen.gyp:codegen_style',
       'tests/tests.gyp:tests',
-      'utils.gyp:Updater',
-      '../ThirdParty/libtgvoip/libtgvoip.gyp:libtgvoip',
+#      '../ThirdParty/libtgvoip/libtgvoip.gyp:libtgvoip',
     ],
 
     'defines': [
-      'AL_LIBTYPE_STATIC',
       'AL_ALEXT_PROTOTYPES',
       'TGVOIP_USE_CXX11_LIB',
       '<!@(python -c "for s in \'<(build_defines)\'.split(\',\'): print(s)")',
@@ -94,13 +93,6 @@
     'include_dirs': [
       '<(src_loc)',
       '<(SHARED_INTERMEDIATE_DIR)',
-      '<(libs_loc)/breakpad/src',
-      '<(libs_loc)/lzma/C',
-      '<(libs_loc)/libexif-0.6.20',
-      '<(libs_loc)/zlib-1.2.8',
-      '<(libs_loc)/ffmpeg',
-      '<(libs_loc)/openal-soft/include',
-      '<(libs_loc)/opus/include',
       '<(minizip_loc)',
       '<(sp_media_key_tap_loc)',
       '<(emoji_suggestions_loc)',
diff --git a/Telegram/gyp/common.gypi b/Telegram/gyp/common.gypi
index 9d9e67a..fd65e31 100644
--- a/Telegram/gyp/common.gypi
+++ b/Telegram/gyp/common.gypi
@@ -21,6 +21,7 @@
   'includes': [
     'settings_win.gypi',
     'settings_mac.gypi',
+    'settings_haiku.gypi',
     'settings_linux.gypi',
   ],
   'variables': {
@@ -42,6 +43,11 @@
             }, {
               'build_mac': 0,
             }],
+            [ 'build_os == "haiku"', {
+              'build_haiku': 1,
+            }, {
+              'build_haiku': 0,
+            }],
             [ 'build_os == "linux"', {
               'build_linux': 1,
             }, {
@@ -53,11 +59,13 @@
         'build_win%': '<(build_win)',
         'build_mac%': '<(build_mac)',
         'build_linux%': '<(build_linux)',
+        'build_haiku%': '<(build_haiku)',
       },
       'build_os%': '<(build_os)',
       'build_win%': '<(build_win)',
       'build_mac%': '<(build_mac)',
       'build_linux%': '<(build_linux)',
+      'build_haiku%': '<(build_haiku)',
 
       'official_build_target%': '',
     },
@@ -65,6 +73,7 @@
     'build_win%': '<(build_win)',
     'build_mac%': '<(build_mac)',
     'build_linux%': '<(build_linux)',
+    'build_haiku%': '<(build_haiku)',
     'official_build_target%': '<(official_build_target)',
 
     # GYP does not support per-configuration libraries :(
diff --git a/Telegram/gyp/list_sources.py b/Telegram/gyp/list_sources.py
index a653846..6ba9368 100644
--- a/Telegram/gyp/list_sources.py
+++ b/Telegram/gyp/list_sources.py
@@ -126,6 +126,8 @@ if input_path != '':
             platform_rules[file_path] = [ 'mac' ]
           elif '/platform/linux/' in file_path:
             platform_rules[file_path] = [ 'linux' ]
+          elif '/platform/haiku/' in file_path:
+            platform_rules[file_path] = [ 'haiku' ]
 
 for replace in replaces:
   replace_parts = replace.split('=', 1)
diff --git a/Telegram/gyp/qt.gypi b/Telegram/gyp/qt.gypi
index 6032d06..0ed2dfd 100644
--- a/Telegram/gyp/qt.gypi
+++ b/Telegram/gyp/qt.gypi
@@ -27,25 +27,21 @@
               [ 'build_macold', {
                 'qt_version%': '5.3.2',
               }, {
-                'qt_version%': '5.6.2',
+                'qt_version%': '5.9.1',
               }]
             ],
           },
           'qt_libs': [
-            'qwebp',
-            'Qt5PrintSupport',
-            'Qt5PlatformSupport',
             'Qt5Network',
             'Qt5Widgets',
             'Qt5Gui',
-            'qtharfbuzzng',
           ],
           'qt_version%': '<(qt_version)',
           'conditions': [
             [ 'build_macold', {
               'linux_path_qt%': '/usr/local/macold/Qt-<(qt_version)',
             }, {
-              'linux_path_qt%': '/usr/local/tdesktop/Qt-<(qt_version)',
+              'linux_path_qt%': '/usr/lib/qt',
             }]
           ]
         },
@@ -85,32 +81,21 @@
             ],
           }],
           [ 'build_linux', {
-            'qt_lib_prefix': 'lib',
-            'qt_lib_debug_postfix': '.a',
-            'qt_lib_release_postfix': '.a',
+            'qt_lib_prefix': '',
+            'qt_lib_debug_postfix': '',
+            'qt_lib_release_postfix': '',
+            'qt_libs': [
+              '<@(qt_libs)',
+              'Qt5Core',
+            ],
+          }],
+          [ 'build_haiku', {
+            'qt_lib_prefix': '',
+            'qt_lib_debug_postfix': '',
+            'qt_lib_release_postfix': '',
             'qt_libs': [
-              'qxcb',
-              'Qt5XcbQpa',
-              'qconnmanbearer',
-              'qgenericbearer',
-              'qnmbearer',
               '<@(qt_libs)',
-              'Qt5DBus',
               'Qt5Core',
-              'qtpcre',
-              'Xi',
-              'Xext',
-              'Xfixes',
-              'SM',
-              'ICE',
-              'fontconfig',
-              'expat',
-              'freetype',
-              'z',
-              'xcb-shm',
-              'xcb-xfixes',
-              'xcb-render',
-              'xcb-static',
             ],
           }],
         ],
@@ -140,11 +125,6 @@
     # '<!@(python <(DEPTH)/list_sources.py [sources] <(qt_moc_list_sources_arg))'
     # where [sources] contains all your source files
     'qt_moc_list_sources_arg': '--moc-prefix SHARED_INTERMEDIATE_DIR/<(_target_name)/moc/moc_',
-
-    'linux_path_xkbcommon%': '/usr/local',
-    'linux_lib_ssl%': '/usr/local/ssl/lib/libssl.a',
-    'linux_lib_crypto%': '/usr/local/ssl/lib/libcrypto.a',
-    'linux_lib_icu%': '/usr/lib/libicutu.a /usr/lib/libicui18n.a /usr/lib/libicuuc.a /usr/lib/libicudata.a',
   },
 
   'configurations': {
@@ -193,13 +173,13 @@
   },
 
   'include_dirs': [
-    '<(qt_loc)/include',
-    '<(qt_loc)/include/QtCore',
-    '<(qt_loc)/include/QtGui',
-    '<(qt_loc)/include/QtCore/<(qt_version)',
-    '<(qt_loc)/include/QtGui/<(qt_version)',
-    '<(qt_loc)/include/QtCore/<(qt_version)/QtCore',
-    '<(qt_loc)/include/QtGui/<(qt_version)/QtGui',
+    '/boot/system/develop/headers',
+    '/boot/system/develop/headers/QtCore',
+    '/boot/system/develop/headers/QtGui',
+    '/boot/system/develop/headers/QtCore/<(qt_version)',
+    '/boot/system/develop/headers/QtGui/<(qt_version)',
+    '/boot/system/develop/headers/QtCore/<(qt_version)/QtCore',
+    '/boot/system/develop/headers/QtGui/<(qt_version)/QtGui',
   ],
   'library_dirs': [
     '<(qt_loc)/lib',
@@ -220,16 +200,9 @@
         '<(qt_loc)/plugins/platforminputcontexts',
       ],
       'libraries': [
-        '<(linux_path_xkbcommon)/lib/libxkbcommon.a',
         '<@(qt_libs_release)',
-        '<(linux_lib_ssl)',
-        '<(linux_lib_crypto)',
-        '<!@(python -c "for s in \'<(linux_lib_icu)\'.split(\' \'): print(s)")',
+        '-lcrypto',
         '-lxcb',
-        '-lX11',
-        '-lX11-xcb',
-        '-ldbus-1',
-        '-ldl',
         '-lgthread-2.0',
         '-lglib-2.0',
         '-lpthread',
@@ -238,10 +211,25 @@
         '<(qt_loc)/mkspecs/linux-g++',
       ],
       'ldflags': [
-        '-static-libstdc++',
-        '-pthread',
         '-g',
-        '-rdynamic',
+      ],
+    }],
+    [ 'build_haiku', {
+      'library_dirs': [
+        '<(qt_loc)/plugins/platforminputcontexts',
+      ],
+      'libraries': [
+        '<@(qt_libs_release)',
+        '-lcrypto',
+        '-lgthread-2.0',
+        '-lglib-2.0',
+        '-lroot',
+      ],
+      'include_dirs': [
+        '<(qt_loc)/mkspecs/haiku-g++',
+      ],
+      'ldflags': [
+        '-g',
       ],
     }],
     [ 'build_mac', {
@@ -260,7 +248,7 @@
       '<(SHARED_INTERMEDIATE_DIR)/<(_target_name)/moc/moc_<(RULE_INPUT_ROOT).cpp',
     ],
     'action': [
-      '<(qt_loc)/bin/moc<(exe_ext)',
+      '/bin/moc',
 
       # Silence "Note: No relevant classes found. No output generated."
       '--no-notes',
diff --git a/Telegram/gyp/qt_rcc.gypi b/Telegram/gyp/qt_rcc.gypi
index eebc696..392b124 100644
--- a/Telegram/gyp/qt_rcc.gypi
+++ b/Telegram/gyp/qt_rcc.gypi
@@ -28,7 +28,7 @@
       '<(SHARED_INTERMEDIATE_DIR)/<(_target_name)/qrc/qrc_<(RULE_INPUT_ROOT).cpp',
     ],
     'action': [
-      '<(qt_loc)/bin/rcc<(exe_ext)',
+      '/bin/rcc',
       '-name', '<(RULE_INPUT_ROOT)',
       '-no-compress',
       '<(RULE_INPUT_PATH)',
diff --git a/Telegram/gyp/refresh.sh b/Telegram/gyp/refresh.sh
index d9e90a1..69fc7b6 100755
--- a/Telegram/gyp/refresh.sh
+++ b/Telegram/gyp/refresh.sh
@@ -23,6 +23,14 @@ if [ "$MySystem" == "Linux" ]; then
   cd ../Release
   ../../../Libraries/cmake-3.6.2/bin/cmake .
   cd ../../Telegram/gyp
+elif [ "$MySystem" == "Haiku" ]; then
+  gyp --depth=. --generator-output=.. -Goutput_dir=../out \
+	-Dofficial_build_target=$BuildTarget Telegram.gyp --format=cmake
+  cd ../../out/Debug
+  cmake .
+  cd ../Release
+  cmake .
+  cd ../../Telegram/gyp
 else
   #gyp --depth=. --generator-output=../.. -Goutput_dir=out Telegram.gyp --format=ninja
   #gyp --depth=. --generator-output=../.. -Goutput_dir=out Telegram.gyp --format=xcode-ninja
diff --git a/Telegram/gyp/settings_haiku.gypi b/Telegram/gyp/settings_haiku.gypi
new file mode 100644
index 0000000..7b5161e
--- /dev/null
+++ b/Telegram/gyp/settings_haiku.gypi
@@ -0,0 +1,79 @@
+# This file is part of Telegram Desktop,
+# the official desktop version of Telegram messaging app, see https://telegram.org
+#
+# Telegram Desktop is free software: you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation, either version 3 of the License, or
+# (at your option) any later version.
+#
+# It is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+# GNU General Public License for more details.
+#
+# In addition, as a special exception, the copyright holders give permission
+# to link the code of portions of this program with the OpenSSL library.
+#
+# Full license: https://github.com/telegramdesktop/tdesktop/blob/master/LICENSE
+# Copyright (c) 2014 John Preston, https://desktop.telegram.org
+
+{
+  'conditions': [
+    [ 'build_haiku', {
+      'variables': {
+        'haiku_common_flags': [
+          '-pipe',
+          '-g',
+          '-Wall',
+          '-W',
+          '-fPIC',
+          '-Wno-unused-variable',
+          '-Wno-unused-parameter',
+          '-Wno-unused-function',
+          '-Wno-switch',
+          '-Wno-comment',
+          '-Wno-unused-but-set-variable',
+          '-Wno-missing-field-initializers',
+          '-Wno-sign-compare',
+        ],
+      },
+      'conditions': [
+        [ '"<!(uname -p)" == "x86_64"', {
+          'defines': [
+            'Q_OS_HAIKU',
+          ],
+          'conditions': [
+            [ '"<(official_build_target)" != "" and "<(official_build_target)" != "haiku"', {
+              'sources': [ '__Wrong_Official_Build_Target_<(official_build_target)_' ],
+            }],
+          ],
+        }, {
+          'defines': [
+            'Q_OS_HAIKU',
+          ],
+          'conditions': [
+            [ '"<(official_build_target)" != "" and "<(official_build_target)" != "haiku"', {
+              'sources': [ '__Wrong_Official_Build_Target_<(official_build_target)_' ],
+            }],
+          ],
+        }],
+      ],
+      'defines': [
+        '_REENTRANT',
+        'QT_PLUGIN',
+      ],
+      'cflags_c': [
+        '<@(haiku_common_flags)',
+        '-std=gnu11',
+      ],
+      'cflags_cc': [
+        '<@(haiku_common_flags)',
+        '-std=gnu++14',
+      ],
+      'configurations': {
+        'Debug': {
+        },
+      },
+    }],
+  ],
+}
diff --git a/Telegram/gyp/telegram_haiku.gypi b/Telegram/gyp/telegram_haiku.gypi
new file mode 100644
index 0000000..a41b667
--- /dev/null
+++ b/Telegram/gyp/telegram_haiku.gypi
@@ -0,0 +1,75 @@
+# This file is part of Telegram Desktop,
+# the official desktop version of Telegram messaging app, see https://telegram.org
+#
+# Telegram Desktop is free software: you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation, either version 3 of the License, or
+# (at your option) any later version.
+#
+# It is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+# GNU General Public License for more details.
+#
+# In addition, as a special exception, the copyright holders give permission
+# to link the code of portions of this program with the OpenSSL library.
+#
+# Full license: https://github.com/telegramdesktop/tdesktop/blob/master/LICENSE
+# Copyright (c) 2014 John Preston, https://desktop.telegram.org
+
+{
+  'conditions': [[ 'build_haiku', {
+    'variables': {
+      'haiku_path_ffmpeg%': '/system/develop/headers/libavcodec',
+      'haiku_path_openal%': '/system/develop/headers/AL',
+      'haiku_path_libexif_lib%': '/system/develop/lib',
+      'haiku_path_breakpad%': '/system/develop/lib',
+      'haiku_path_opus_include%': '/system/develop/headers/opus',
+    },
+    'include_dirs': [
+      '/system/develop/headers/openssl',
+      '<(haiku_path_ffmpeg)/include',
+      '<(haiku_path_openal)/include',
+      '<(haiku_path_breakpad)/include/breakpad',
+      '<(haiku_path_opus_include)',
+    ],
+    'library_dirs': [
+      '/system/develop/lib',
+      '<(haiku_path_ffmpeg)/lib',
+      '<(haiku_path_openal)/lib',
+      '<(haiku_path_libexif_lib)',
+    ],
+    'libraries': [
+      'openal',
+      'avformat',
+      'avcodec',
+      'swresample',
+      'swscale',
+      'avutil',
+      'minizip',
+      'opus',
+      'z',
+#      '<!(pkg-config 2> /dev/null --libs <@(pkgconfig_libs))',
+    ],
+    'configurations': {
+      'Release': {
+        'cflags': [
+          '-Ofast',
+          '-flto',
+          '-fno-strict-aliasing',
+        ],
+        'cflags_cc': [
+          '-Ofast',
+          '-flto',
+          '-fno-strict-aliasing',
+        ],
+        'ldflags': [
+          '-Ofast',
+          '-flto',
+        ],
+      },
+    },
+    'cmake_precompiled_header': '<(src_loc)/stdafx.h',
+    'cmake_precompiled_header_script': 'PrecompiledHeader.cmake',
+  }]],
+}
diff --git a/Telegram/gyp/telegram_qrc.gypi b/Telegram/gyp/telegram_qrc.gypi
index 4bf4033..8fdd119 100644
--- a/Telegram/gyp/telegram_qrc.gypi
+++ b/Telegram/gyp/telegram_qrc.gypi
@@ -34,6 +34,13 @@
         ],
       }
     }],
+    [ 'build_haiku', {
+      'variables': {
+        'qrc_files': [
+          '<(res_loc)/qrc/telegram_haiku.qrc',
+        ],
+      }
+    }],
     [ 'build_mac', {
       'variables': {
         'qrc_files': [
diff --git a/Telegram/gyp/telegram_sources.txt b/Telegram/gyp/telegram_sources.txt
index ef66965..58f2789 100644
--- a/Telegram/gyp/telegram_sources.txt
+++ b/Telegram/gyp/telegram_sources.txt
@@ -302,6 +302,10 @@
 <(src_loc)/mtproto/type_utils.h
 <(src_loc)/overview/overview_layout.cpp
 <(src_loc)/overview/overview_layout.h
+<(src_loc)/platform/haiku/main_window_haiku.cpp
+<(src_loc)/platform/haiku/main_window_haiku.h
+<(src_loc)/platform/haiku/specific_haiku.cpp
+<(src_loc)/platform/haiku/specific_haiku.h
 <(src_loc)/platform/linux/linux_desktop_environment.cpp
 <(src_loc)/platform/linux/linux_desktop_environment.h
 <(src_loc)/platform/linux/linux_gdk_helper.cpp
@@ -599,13 +603,7 @@
 <(emoji_suggestions_loc)/emoji_suggestions.h
 
 platforms: !win
-<(minizip_loc)/crypt.h
-<(minizip_loc)/ioapi.c
-<(minizip_loc)/ioapi.h
-<(minizip_loc)/zip.c
-<(minizip_loc)/zip.h
-<(minizip_loc)/unzip.c
-<(minizip_loc)/unzip.h
+<(src_loc)/qt_functions.cpp
 
 platforms: mac
 <(sp_media_key_tap_loc)/SPMediaKeyTap.m
diff --git a/Telegram/gyp/utils.gyp b/Telegram/gyp/utils.gyp
index 209c737..63b3ec5 100644
--- a/Telegram/gyp/utils.gyp
+++ b/Telegram/gyp/utils.gyp
@@ -91,6 +91,13 @@
           'lzma',
         ],
       }],
+      [ 'build_haiku', {
+        'libraries': [
+          'ssl',
+          'crypto',
+          'lzma',
+        ],
+      }],
       [ 'build_mac', {
         'include_dirs': [
           '<(libs_loc)/openssl-xcode/include'
-- 
2.13.1

