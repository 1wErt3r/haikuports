From 0cfe0abc83aa2204164fe5ced7fe69a0cd5cb8cf Mon Sep 17 00:00:00 2001
From: Gerasim Troeglazov <3dEyes@gmail.com>
Date: Tue, 23 Mar 2021 19:00:30 +1000
Subject: Workaround build issues on GCC8


diff --git a/Telegram/SourceFiles/calls/calls_group_panel.cpp b/Telegram/SourceFiles/calls/calls_group_panel.cpp
index e659dc0..6b6cf46 100644
--- a/Telegram/SourceFiles/calls/calls_group_panel.cpp
+++ b/Telegram/SourceFiles/calls/calls_group_panel.cpp
@@ -291,9 +291,9 @@ Panel::Panel(not_null<GroupCall*> call)
 	call->allowedToSpeakNotifications(
 	) | rpl::start_with_next([=] {
 		if (isActive()) {
-			Ui::ShowMultilineToast({
-				.parentOverride = widget(),
+			Ui::ShowMultilineToast(Ui::MultilineToastArgs{
 				.text = { tr::lng_group_call_can_speak_here(tr::now) },
+				.parentOverride = widget(),
 			});
 		} else {
 			const auto real = _peer->groupCall();
@@ -536,9 +536,9 @@ void Panel::initWithCall(GroupCall *call) {
 		_layerBg->showBox(std::move(next));
 	};
 	const auto showToast = [=](QString text) {
-		Ui::ShowMultilineToast({
-			.parentOverride = widget(),
+		Ui::ShowMultilineToast(Ui::MultilineToastArgs{
 			.text = { text },
+			.parentOverride = widget(),
 		});
 	};
 	auto [shareLinkCallback, shareLinkLifetime] = ShareInviteLinkAction(
@@ -610,13 +610,13 @@ void Panel::setupJoinAsChangedToasts() {
 			return (state == State::Joined);
 		}) | rpl::take(1);
 	}) | rpl::flatten_latest() | rpl::start_with_next([=] {
-		Ui::ShowMultilineToast({
-			.parentOverride = widget(),
+		Ui::ShowMultilineToast(Ui::MultilineToastArgs{
 			.text = tr::lng_group_call_join_as_changed(
 				tr::now,
 				lt_name,
 				Ui::Text::Bold(_call->joinAs()->name),
 				Ui::Text::WithEntities),
+			.parentOverride = widget(),
 		});
 	}, widget()->lifetime());
 }
@@ -630,13 +630,13 @@ void Panel::setupTitleChangedToasts() {
 			? _peer->name
 			: _peer->groupCall()->title();
 	}) | rpl::start_with_next([=](const QString &title) {
-		Ui::ShowMultilineToast({
-			.parentOverride = widget(),
+		Ui::ShowMultilineToast(Ui::MultilineToastArgs{
 			.text = tr::lng_group_call_title_changed(
 				tr::now,
 				lt_title,
 				Ui::Text::Bold(title),
 				Ui::Text::WithEntities),
+			.parentOverride = widget(),
 		});
 	}, widget()->lifetime());
 }
@@ -660,9 +660,9 @@ void Panel::subscribeToChanges(not_null<Data::GroupCall*> real) {
 			const auto skip = st::groupCallRecordingMarkSkip;
 			_recordingMark->resize(size + 2 * skip, size + 2 * skip);
 			_recordingMark->setClickedCallback([=] {
-				Ui::ShowMultilineToast({
-					.parentOverride = widget(),
+				Ui::ShowMultilineToast(Ui::MultilineToastArgs{
 					.text = { tr::lng_group_call_is_recorded(tr::now) },
+					.parentOverride = widget(),
 				});
 			});
 			const auto animate = [=] {
@@ -699,8 +699,7 @@ void Panel::subscribeToChanges(not_null<Data::GroupCall*> real) {
 	) | rpl::distinct_until_changed(
 	) | rpl::start_with_next([=](bool recorded) {
 		validateRecordingMark(recorded);
-		Ui::ShowMultilineToast({
-			.parentOverride = widget(),
+		Ui::ShowMultilineToast(Ui::MultilineToastArgs{
 			.text = (recorded
 				? tr::lng_group_call_recording_started
 				: (_call && _call->recordingStoppedByMe())
@@ -708,6 +707,7 @@ void Panel::subscribeToChanges(not_null<Data::GroupCall*> real) {
 				: tr::lng_group_call_recording_stopped)(
 					tr::now,
 					Ui::Text::RichLangValue),
+			.parentOverride = widget(),
 		});
 	}, widget()->lifetime());
 	validateRecordingMark(real->recordStartDate() != 0);
@@ -760,9 +760,9 @@ void Panel::chooseJoinAs() {
 		_layerBg->showBox(std::move(next));
 	};
 	const auto showToast = [=](QString text) {
-		Ui::ShowMultilineToast({
-			.parentOverride = widget(),
+		Ui::ShowMultilineToast(Ui::MultilineToastArgs{
 			.text = { text },
+			.parentOverride = widget(),
 		});
 	};
 	_joinAsProcess.start(
@@ -857,23 +857,23 @@ void Panel::addMembers() {
 		}
 		const auto result = call->inviteUsers(users);
 		if (const auto user = std::get_if<not_null<UserData*>>(&result)) {
-			Ui::ShowMultilineToast({
-				.parentOverride = widget(),
+			Ui::ShowMultilineToast(Ui::MultilineToastArgs{
 				.text = tr::lng_group_call_invite_done_user(
 					tr::now,
 					lt_user,
 					Ui::Text::Bold((*user)->firstName),
 					Ui::Text::WithEntities),
+				.parentOverride = widget(),
 			});
 		} else if (const auto count = std::get_if<int>(&result)) {
 			if (*count > 0) {
-				Ui::ShowMultilineToast({
-					.parentOverride = widget(),
+				Ui::ShowMultilineToast(Ui::MultilineToastArgs{
 					.text = tr::lng_group_call_invite_done_many(
 						tr::now,
 						lt_count,
 						*count,
 						Ui::Text::RichLangValue),
+					.parentOverride = widget(),
 				});
 			}
 		} else {
diff --git a/Telegram/SourceFiles/calls/calls_group_settings.cpp b/Telegram/SourceFiles/calls/calls_group_settings.cpp
index 42491c7..041fab3 100644
--- a/Telegram/SourceFiles/calls/calls_group_settings.cpp
+++ b/Telegram/SourceFiles/calls/calls_group_settings.cpp
@@ -535,9 +535,9 @@ void SettingsBox(
 			box->getDelegate()->show(std::move(next));
 		});
 		const auto showToast = crl::guard(box, [=](QString text) {
-			Ui::ShowMultilineToast({
-				.parentOverride = box->getDelegate()->outerContainer(),
+			Ui::ShowMultilineToast(Ui::MultilineToastArgs{
 				.text = { text },
+				.parentOverride = box->getDelegate()->outerContainer(),
 			});
 		});
 		auto [shareLinkCallback, shareLinkLifetime] = ShareInviteLinkAction(
@@ -573,9 +573,9 @@ void SettingsBox(
 				}
 				QGuiApplication::clipboard()->setText(link);
 				if (weakBox) {
-					Ui::ShowMultilineToast({
-						.parentOverride = box->getDelegate()->outerContainer(),
+					Ui::ShowMultilineToast(Ui::MultilineToastArgs{
 						.text = { tr::lng_create_channel_link_copied(tr::now) },
+						.parentOverride = box->getDelegate()->outerContainer(),
 					});
 				}
 				return true;
diff --git a/Telegram/SourceFiles/ui/toasts/common_toasts.h b/Telegram/SourceFiles/ui/toasts/common_toasts.h
index ebf1efe..33b1db0 100644
--- a/Telegram/SourceFiles/ui/toasts/common_toasts.h
+++ b/Telegram/SourceFiles/ui/toasts/common_toasts.h
@@ -12,9 +12,9 @@ https://github.com/telegramdesktop/tdesktop/blob/master/LEGAL
 namespace Ui {
 
 struct MultilineToastArgs {
-	QWidget *parentOverride = nullptr;
 	TextWithEntities text;
 	crl::time duration = 0;
+	QWidget *parentOverride = nullptr;
 };
 
 void ShowMultilineToast(MultilineToastArgs &&args);
-- 
2.30.2

