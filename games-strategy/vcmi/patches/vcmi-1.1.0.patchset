From dcbeefe5844a008645e202c316b2c35613257521 Mon Sep 17 00:00:00 2001
From: PulkoMandy <pulkomandy@pulkomandy.tk>
Date: Fri, 13 Jan 2023 20:18:05 +0100
Subject: Import patches from vcmi 0.99


diff --git a/Global.h b/Global.h
index 0270d69..8d6a802 100644
--- a/Global.h
+++ b/Global.h
@@ -50,7 +50,7 @@ static_assert(sizeof(bool) == 1, "Bool needs to be 1 byte in size.");
 #  define VCMI_WINDOWS_32
 #elif defined(_WIN32_WCE)
 #  error "Windows CE isn't supported"
-#elif defined(__linux__) || defined(__gnu_linux__) || defined(linux) || defined(__linux)
+#elif defined(__linux__) || defined(__gnu_linux__) || defined(linux) || defined(__linux) || defined(__HAIKU__)
 #  define VCMI_UNIX
 #  define VCMI_XDG
 #  ifdef __ANDROID__
diff --git a/lib/CThreadHelper.cpp b/lib/CThreadHelper.cpp
index 94ab6d5..01602b6 100644
--- a/lib/CThreadHelper.cpp
+++ b/lib/CThreadHelper.cpp
@@ -14,6 +14,8 @@
 	#include <windows.h>
 #elif !defined(VCMI_APPLE) && !defined(VCMI_FREEBSD) && !defined(VCMI_HURD)
 	#include <sys/prctl.h>
+#elif defined(__HAIKU__)
+	#include <OS.h>
 #endif
 
 VCMI_LIB_NAMESPACE_BEGIN
@@ -88,6 +90,8 @@ void setThreadName(const std::string &name)
 	prctl(PR_SET_NAME, name.c_str(), 0, 0, 0);
 #elif defined(VCMI_APPLE)
 	pthread_setname_np(name.c_str());
+#elif defined(__HAIKU__)
+	rename_thread(find_thread(NULL), name.c_str());
 #endif
 }
 
diff --git a/server/CMakeLists.txt b/server/CMakeLists.txt
index 0f03131..82aebe3 100644
--- a/server/CMakeLists.txt
+++ b/server/CMakeLists.txt
@@ -47,6 +47,10 @@ if(WIN32)
 	)
 endif()
 
+if(HAIKU)
+	target_link_libraries(vcmiserver network)
+endif()
+
 vcmi_set_output_dir(vcmiserver "")
 enable_pch(vcmiserver)
 
diff --git a/server/CVCMIServer.cpp b/server/CVCMIServer.cpp
index 63bd636..5ab20c9 100644
--- a/server/CVCMIServer.cpp
+++ b/server/CVCMIServer.cpp
@@ -958,7 +958,7 @@ ui8 CVCMIServer::getIdOfFirstUnallocatedPlayer() const
 	return 0;
 }
 
-#if defined(__GNUC__) && !defined(__MINGW32__) && !defined(VCMI_ANDROID) && !defined(VCMI_IOS)
+#if defined(__GNUC__) && !defined(__MINGW32__) && !defined(VCMI_ANDROID) && !defined(VCMI_IOS) && !defined(__HAIKU__)
 void handleLinuxSignal(int sig)
 {
 	const int STACKTRACE_SIZE = 100;
@@ -1053,7 +1053,7 @@ int main(int argc, char * argv[])
 #endif
 	// Installs a sig sev segmentation violation handler
 	// to log stacktrace
-#if defined(__GNUC__) && !defined(__MINGW32__) && !defined(VCMI_ANDROID) && !defined(VCMI_IOS)
+#if defined(__GNUC__) && !defined(__MINGW32__) && !defined(VCMI_ANDROID) && !defined(VCMI_IOS) && !defined(__HAIKU__)
 	signal(SIGSEGV, handleLinuxSignal);
 #endif
 
diff --git a/vcmibuilder b/vcmibuilder
index 08b78ab..b29dadd 100755
--- a/vcmibuilder
+++ b/vcmibuilder
@@ -52,7 +52,7 @@ then
 	echo " --convertMP3     " "Convert all mp3 files into ogg/vorbis"
 	echo "                  " "Requires ffmpeg or avconv"
 	echo
-	echo " --dest DIRECTORY " "Path where resulting data will be placed. Default is ~/.local/share/vcmi"
+	echo " --dest DIRECTORY " "Path where resulting data will be placed. Default is `finddir B_USER_NONPACKAGED_DATA_DIRECTORY`/vcmi"
 	echo
 	echo " --validate       " "Run basic validness checks"
 	exit 0
@@ -153,7 +153,7 @@ if [[ -z "$dest_dir" ]]
 then
 	if [[ -z "$XDG_DATA_HOME" ]]
 	then
-		dest_dir="$HOME/.local/share/vcmi"
+		dest_dir="`finddir B_USER_NONPACKAGED_DATA_DIRECTORY`/vcmi"
 	else
 		dest_dir="$XDG_DATA_HOME/vcmi"
 	fi
-- 
2.37.3


From e174985316cc1d3fbe7ce7d71c17d2832106f1b0 Mon Sep 17 00:00:00 2001
From: PulkoMandy <pulkomandy@pulkomandy.tk>
Date: Fri, 13 Jan 2023 20:58:08 +0100
Subject: Fix linking of libnetwork in server


diff --git a/server/CMakeLists.txt b/server/CMakeLists.txt
index 82aebe3..b5770cb 100644
--- a/server/CMakeLists.txt
+++ b/server/CMakeLists.txt
@@ -33,6 +33,10 @@ endif()
 if(CMAKE_SYSTEM_NAME MATCHES FreeBSD)
 	set(server_LIBS execinfo ${server_LIBS})
 endif()
+if(HAIKU)
+	set(server_LIBS network ${server_LIBS})
+endif()
+
 target_link_libraries(vcmiserver PRIVATE ${server_LIBS} minizip::minizip)
 
 target_include_directories(vcmiserver
@@ -47,10 +51,6 @@ if(WIN32)
 	)
 endif()
 
-if(HAIKU)
-	target_link_libraries(vcmiserver network)
-endif()
-
 vcmi_set_output_dir(vcmiserver "")
 enable_pch(vcmiserver)
 
-- 
2.37.3


From 5ed623f4a0ccde176688a5799d4cf09f210d24b2 Mon Sep 17 00:00:00 2001
From: PulkoMandy <pulkomandy@pulkomandy.tk>
Date: Fri, 13 Jan 2023 22:44:50 +0100
Subject: Fix Haiku patch


diff --git a/lib/CThreadHelper.cpp b/lib/CThreadHelper.cpp
index 01602b6..e96220b 100644
--- a/lib/CThreadHelper.cpp
+++ b/lib/CThreadHelper.cpp
@@ -12,10 +12,10 @@
 
 #ifdef VCMI_WINDOWS
 	#include <windows.h>
-#elif !defined(VCMI_APPLE) && !defined(VCMI_FREEBSD) && !defined(VCMI_HURD)
-	#include <sys/prctl.h>
 #elif defined(__HAIKU__)
 	#include <OS.h>
+#elif !defined(VCMI_APPLE) && !defined(VCMI_FREEBSD) && !defined(VCMI_HURD)
+	#include <sys/prctl.h>
 #endif
 
 VCMI_LIB_NAMESPACE_BEGIN
-- 
2.37.3

