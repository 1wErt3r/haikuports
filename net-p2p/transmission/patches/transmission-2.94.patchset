From d7f9dfcba425734b64e31fa5595edfbe5c496768 Mon Sep 17 00:00:00 2001
From: Jerome Duval <jerome.duval@gmail.com>
Date: Fri, 5 Sep 2014 14:57:25 +0000
Subject: haiku patch


diff --git a/libtransmission/platform-quota.c b/libtransmission/platform-quota.c
index e7d1f6d..ee11876 100644
--- a/libtransmission/platform-quota.c
+++ b/libtransmission/platform-quota.c
@@ -13,7 +13,7 @@
 
 #include <event2/util.h> /* evutil_ascii_strcasecmp () */
 
-#ifndef _WIN32
+#if !defined(WIN32) && !defined(__HAIKU__)
  #include <unistd.h> /* getuid() */
  #include <sys/types.h> /* types needed by quota.h */
  #if defined(__FreeBSD__) || defined(__OpenBSD__)
@@ -72,7 +72,7 @@
 ****
 ***/
 
-#ifndef _WIN32
+#if !defined(WIN32) && !defined(__HAIKU__)
 static const char *
 getdev (const char * path)
 {
@@ -347,7 +347,7 @@ tr_getQuotaFreeSpace (const struct tr_device_info * info)
 {
   int64_t ret = -1;
 
-#ifndef _WIN32
+#if !defined(WIN32) && !defined(__HAIKU__)
 
   if (info->fstype && !evutil_ascii_strcasecmp(info->fstype, "xfs"))
     {
@@ -410,7 +410,7 @@ tr_device_info_create (const char * path)
 
   info = tr_new0 (struct tr_device_info, 1);
   info->path = tr_strdup (path);
-#ifndef _WIN32
+#if !defined(WIN32) && !defined(__HAIKU__)
   info->device = tr_strdup (getblkdev (path));
   info->fstype = tr_strdup (getfstype (path));
 #endif
diff --git a/third-party/miniupnp/miniupnpc.c b/third-party/miniupnp/miniupnpc.c
index 82e7535..425d7fc 100644
--- a/third-party/miniupnp/miniupnpc.c
+++ b/third-party/miniupnp/miniupnpc.c
@@ -17,7 +17,7 @@
 #endif
 #endif
 
-#if !defined(__DragonFly__) && !defined(__OpenBSD__) && !defined(__NetBSD__) && !defined(__APPLE__) && !defined(_WIN32) && !defined(__CYGWIN__) && !defined(__sun)
+#if !defined(__DragonFly__) && !defined(__OpenBSD__) && !defined(__NetBSD__) && !defined(__APPLE__) && !defined(_WIN32) && !defined(__CYGWIN__) && !defined(__sun) && !defined(__HAIKU__)
 #define HAS_IP_MREQN
 #endif
 
diff --git a/third-party/miniupnp/portlistingparse.c b/third-party/miniupnp/portlistingparse.c
index 19e3054..2b1bce8 100644
--- a/third-party/miniupnp/portlistingparse.c
+++ b/third-party/miniupnp/portlistingparse.c
@@ -28,7 +28,7 @@ static const struct {
 
 /* Helper function */
 static UNSIGNED_INTEGER
-atoui(const char * p, int l)
+my_atoui(const char * p, int l)
 {
 	UNSIGNED_INTEGER r = 0;
 	while(l > 0 && *p)
@@ -94,7 +94,7 @@ data(void * d, const char * data, int l)
 		pm->remoteHost[l] = '\0';
 		break;
 	case NewExternalPort:
-		pm->externalPort = (unsigned short)atoui(data, l);
+		pm->externalPort = (unsigned short)my_atoui(data, l);
 		break;
 	case NewProtocol:
 		if(l > 3)
@@ -103,21 +103,21 @@ data(void * d, const char * data, int l)
 		pm->protocol[l] = '\0';
 		break;
 	case NewInternalPort:
-		pm->internalPort = (unsigned short)atoui(data, l);
+		pm->internalPort = (unsigned short)my_atoui(data, l);
 		break;
 	case NewInternalClient:
 		memcpy(pm->internalClient, data, l);
 		pm->internalClient[l] = '\0';
 		break;
 	case NewEnabled:
-		pm->enabled = (unsigned char)atoui(data, l);
+		pm->enabled = (unsigned char)my_atoui(data, l);
 		break;
 	case NewDescription:
 		memcpy(pm->description, data, l);
 		pm->description[l] = '\0';
 		break;
 	case NewLeaseTime:
-		pm->leaseTime = atoui(data, l);
+		pm->leaseTime = my_atoui(data, l);
 		break;
 	default:
 		break;
-- 
2.26.0


From b3ab37a63b744fe01b3b54a7ef62dc418fbf4f82 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Zolt=C3=A1n=20Mizsei?= <zmizsei@extrowerk.com>
Date: Sat, 4 Nov 2017 14:24:02 +0100
Subject: Haiku supporting patches


diff --git a/CMakeLists.txt b/CMakeLists.txt
index da28e31..ee6f98b 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -522,6 +522,13 @@ if(HAVE_LIBM)
     set(LIBM_LIBRARY m)
 endif()
 
+if (HAIKU)
+	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DB_USE_POSITIVE_POSIX_ERRORS")
+	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DB_USE_POSITIVE_POSIX_ERRORS")
+    set(NETWORKING_LIBRARY network)
+    set(HAIKU_SUPPORT_LIBRARY posix_error_mapper)
+endif()
+
 if(ENABLE_TESTS)
     enable_testing()
     include(CTest)
diff --git a/libtransmission/CMakeLists.txt b/libtransmission/CMakeLists.txt
index b5230b9..0dbfbf6 100644
--- a/libtransmission/CMakeLists.txt
+++ b/libtransmission/CMakeLists.txt
@@ -248,6 +248,8 @@ target_link_libraries(${TR_NAME}
     ${B64_LIBRARIES}
     ${LIBINTL_LIBRARY}
     ${LIBM_LIBRARY}
+    ${NETWORKING_LIBRARY}
+    ${HAIKU_SUPPORT_LIBRARY}
 )
 
 if(ICONV_FOUND)
-- 
2.26.0


From 16b0d9c87710d01a7d7304a200a34d60bd643e48 Mon Sep 17 00:00:00 2001
From: Gerasim Troeglazov <3dEyes@gmail.com>
Date: Wed, 10 Jun 2020 20:35:03 +1000
Subject: Use haiku int types for UTP library


diff --git a/CMakeLists.txt b/CMakeLists.txt
index ee6f98b..cbe06e6 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -339,7 +339,8 @@ if(ENABLE_UTP)
               COMMAND "${CMAKE_COMMAND}" -E copy "${THIRD_PARTY_DIR}/utp_config.h" "<SOURCE_DIR>/utp_config.h"
               COMMAND "${CMAKE_COMMAND}" -E chdir "<SOURCE_DIR>" patch -p1 --binary -i "${THIRD_PARTY_DIR}/utp-01-ticket-5002.patch"
               COMMAND "${CMAKE_COMMAND}" -E chdir "<SOURCE_DIR>" patch -p1 --binary -i "${THIRD_PARTY_DIR}/utp-02-win32.patch"
-              COMMAND "${CMAKE_COMMAND}" -E chdir "<SOURCE_DIR>" patch -p1 --binary -i "${THIRD_PARTY_DIR}/utp-03-msvc14.patch")
+              COMMAND "${CMAKE_COMMAND}" -E chdir "<SOURCE_DIR>" patch -p1 --binary -i "${THIRD_PARTY_DIR}/utp-03-msvc14.patch"
+              COMMAND "${CMAKE_COMMAND}" -E chdir "<SOURCE_DIR>" patch -p1 --binary -i "${THIRD_PARTY_DIR}/utp-04-haikutypes.patch")
 endif()
 
 tr_add_external_auto_library(B64 b64
diff --git a/third-party/utp-04-haikutypes.patch b/third-party/utp-04-haikutypes.patch
new file mode 100644
index 0000000..8350d02
--- /dev/null
+++ b/third-party/utp-04-haikutypes.patch
@@ -0,0 +1,30 @@
+diff --git a/utypes.h b/utypes.h
+--- a/utypes.h
++++ b/utypes.h
+@@ -3,6 +3,9 @@
+ 
+ // standard types
+ typedef unsigned char byte;
++#ifdef __HAIKU__
++#include <SupportDefs.h>
++#else
+ typedef unsigned char uint8;
+ typedef signed char int8;
+ typedef unsigned short uint16;
+@@ -18,6 +21,7 @@
+ typedef unsigned long long uint64;
+ typedef long long int64;
+ #endif
++#endif
+ 
+ /* compile-time assert */
+ #ifndef CASSERT
+@@ -35,7 +39,7 @@
+ typedef const char * cstr;
+ typedef char * str;
+ 
+-#ifndef __cplusplus
++#if !defined(__cplusplus) && !defined(__HAIKU__)
+ typedef uint8 bool;
+ #endif
+ 
-- 
2.26.0

